// src/app/test-db/page.tsx
// ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡¶ø: Database ‡¶•‡ßá‡¶ï‡ßá data fetch ‡¶ï‡¶∞‡ßá display ‡¶ï‡¶∞‡¶õ‡¶ø
// ‡¶ï‡ßá‡¶® ‡¶ï‡¶∞‡¶õ‡¶ø: Verify ‡¶ï‡¶∞‡¶§‡ßá database connection working
// ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá: Prisma Client ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá findMany() query

import { prisma } from "@/lib/prisma/client";

// Server Component (Next.js 14 ‡¶è default)
// Server component ‡¶Æ‡¶æ‡¶®‡ßá: ‡¶è‡¶ü‡¶æ server ‡¶è execute ‡¶π‡¶Ø‡¶º, client ‡¶è ‡¶®‡¶æ
// Benefits: Direct database access, no API route needed, faster
export default async function TestDBPage() {
  // ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡¶ø: Database ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶¨ posts fetch ‡¶ï‡¶∞‡¶õ‡¶ø relationships ‡¶∏‡¶π
  // ‡¶ï‡ßá‡¶® ‡¶ï‡¶∞‡¶õ‡¶ø: Check ‡¶ï‡¶∞‡¶§‡ßá data ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶è‡¶¨‡¶Ç relationships ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá ‡¶ï‡¶ø‡¶®‡¶æ
  // ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá: prisma.post.findMany() - ‡¶è‡¶ü‡¶æ SQL ‡¶è convert ‡¶π‡¶Ø‡¶º‡ßá database ‡¶è ‡¶Ø‡¶æ‡¶Ø‡¶º

  const posts = await prisma.post.findMany({
    // include: Related tables ‡¶è‡¶∞ data ‡¶ì ‡¶®‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ü‡¶∏‡ßã (JOIN operation)
    include: {
      author: true, // Post ‡¶≤‡¶ø‡¶ñ‡ßá‡¶õ‡ßá ‡¶ï‡ßá - User table ‡¶•‡ßá‡¶ï‡ßá data
      category: true, // Post ‡¶ï‡ßã‡¶® category ‡¶§‡ßá - Category table ‡¶•‡ßá‡¶ï‡ßá data
    },
    // orderBy: Results ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá sort ‡¶ï‡¶∞‡¶¨‡ßá
    // createdAt: 'desc' ‡¶Æ‡¶æ‡¶®‡ßá newest first (latest posts ‡¶â‡¶™‡¶∞‡ßá)
    orderBy: {
      createdAt: "desc",
    },
  });

  // ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡¶ø: Count ‡¶ï‡¶∞‡¶õ‡¶ø ‡¶ï‡¶§‡¶ú‡¶® users ‡¶Ü‡¶õ‡ßá
  // ‡¶ï‡ßá‡¶® ‡¶ï‡¶∞‡¶õ‡¶ø: Statistics ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
  // ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá: prisma.user.count() - COUNT(*) SQL query run ‡¶ï‡¶∞‡ßá
  const userCount = await prisma.user.count();

  // ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡¶ø: Count ‡¶ï‡¶∞‡¶õ‡¶ø ‡¶ï‡¶§‡¶ó‡ßÅ‡¶≤‡ßã categories ‡¶Ü‡¶õ‡ßá
  const categoryCount = await prisma.category.count();

  // JSX return ‡¶ï‡¶∞‡¶õ‡¶ø - ‡¶è‡¶ü‡¶æ HTML ‡¶è‡¶∞ ‡¶Æ‡¶§‡ßã ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ JavaScript ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶§‡¶∞‡ßá
  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-8">
      <div className="max-w-5xl mx-auto">
        {/* Header Section - Title ‡¶è‡¶¨‡¶Ç description */}
        <div className="text-center mb-8">
          <h1 className="text-5xl font-bold text-gray-800 mb-3">
            üóÑÔ∏è Database Test Page
          </h1>
          <p className="text-xl text-gray-600">
            Testing Prisma connection to Vercel Postgres
          </p>
        </div>

        {/* Stats Cards - Database ‡¶è‡¶∞ summary statistics */}
        {/* Grid layout: 3 columns on desktop, 1 on mobile */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-10">
          {/* Users Count Card */}
          <div className="bg-white rounded-xl shadow-lg p-6 text-center transform hover:scale-105 transition-transform">
            <div className="text-5xl font-bold text-blue-600 mb-2">
              {userCount}
            </div>
            <div className="text-gray-600 text-lg">üë• Users</div>
          </div>

          {/* Categories Count Card */}
          <div className="bg-white rounded-xl shadow-lg p-6 text-center transform hover:scale-105 transition-transform">
            <div className="text-5xl font-bold text-green-600 mb-2">
              {categoryCount}
            </div>
            <div className="text-gray-600 text-lg">üìÅ Categories</div>
          </div>

          {/* Posts Count Card */}
          <div className="bg-white rounded-xl shadow-lg p-6 text-center transform hover:scale-105 transition-transform">
            <div className="text-5xl font-bold text-purple-600 mb-2">
              {posts.length}
            </div>
            <div className="text-gray-600 text-lg">üìù Posts</div>
          </div>
        </div>

        {/* Posts Section Header */}
        <h2 className="text-3xl font-bold text-gray-800 mb-6">
          üìö Blog Posts from Database:
        </h2>

        {/* Posts List - ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶æ post ‡¶è‡¶ï‡¶ü‡¶æ card ‡¶è show ‡¶ï‡¶∞‡¶¨‡ßã */}
        <div className="space-y-6">
          {/* ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡¶ø: posts array loop ‡¶ï‡¶∞‡¶õ‡¶ø map() ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá */}
          {/* ‡¶ï‡ßá‡¶® ‡¶ï‡¶∞‡¶õ‡¶ø: ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶æ post ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶è‡¶ï‡¶ü‡¶æ card render ‡¶ï‡¶∞‡¶§‡ßá */}
          {/* ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá: map() function ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶æ element ‡¶è call ‡¶π‡¶Ø‡¶º ‡¶è‡¶¨‡¶Ç JSX return ‡¶ï‡¶∞‡ßá */}
          {posts.map((post) => (
            <div
              key={post.id} // React ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø unique key ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞ list items ‡¶è
              className="bg-white rounded-xl shadow-lg p-8 hover:shadow-2xl transition-all duration-300"
            >
              {/* Post Header - Title ‡¶è‡¶¨‡¶Ç badges */}
              <div className="flex items-start justify-between mb-4">
                <h3 className="text-2xl font-bold text-gray-800 flex-1">
                  {post.title}
                </h3>

                {/* ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡¶ø: Conditional rendering - featured ‡¶π‡¶≤‡ßá badge ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßã */}
                {/* ‡¶ï‡ßá‡¶® ‡¶ï‡¶∞‡¶õ‡¶ø: User ‡¶ï‡ßá highlight ‡¶ï‡¶∞‡¶§‡ßá ‡¶ï‡ßã‡¶®‡¶ü‡¶æ featured */}
                {/* ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá: && operator - left side true ‡¶π‡¶≤‡ßá right side render ‡¶π‡¶Ø‡¶º */}
                {post.featured && (
                  <span className="bg-yellow-100 text-yellow-800 text-sm px-3 py-1 rounded-full font-semibold">
                    ‚≠ê Featured
                  </span>
                )}

                {/* Published status badge */}
                <span
                  className={`ml-2 text-sm px-3 py-1 rounded-full font-semibold ${
                    post.published
                      ? "bg-green-100 text-green-800"
                      : "bg-gray-100 text-gray-800"
                  }`}
                >
                  {post.published ? "‚úÖ Published" : "üìù Draft"}
                </span>
              </div>

              {/* Post Excerpt */}
              <p className="text-gray-600 text-lg mb-6 leading-relaxed">
                {post.excerpt}
              </p>

              {/* Post Meta Information - author, category, views, etc */}
              <div className="flex flex-wrap items-center gap-6 text-sm text-gray-500">
                {/* Author Info */}
                {/* ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡¶ø: post.author access ‡¶ï‡¶∞‡¶õ‡¶ø - ‡¶è‡¶ü‡¶æ relationship data */}
                {/* ‡¶ï‡ßá‡¶® ‡¶ï‡¶∞‡¶õ‡¶ø: User ‡¶ï‡ßá ‡¶¨‡¶≤‡¶§‡ßá post ‡¶ü‡¶æ ‡¶ï‡ßá ‡¶≤‡¶ø‡¶ñ‡ßá‡¶õ‡ßá */}
                {/* ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá: include: { author: true } ‡¶ï‡¶∞‡¶æ‡¶Ø‡¶º ‡¶è‡¶á data ‡¶™‡ßá‡¶Ø‡¶º‡ßá‡¶õ‡¶ø */}
                <div className="flex items-center gap-2">
                  <span className="text-xl">üë§</span>
                  <span className="font-medium text-gray-700">
                    {post.author.name}
                  </span>
                </div>

                {/* Category Info */}
                {/* ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡¶ø: post.category access ‡¶ï‡¶∞‡¶õ‡¶ø - ‡¶è‡¶ü‡¶æ‡¶ì relationship data */}
                <div className="flex items-center gap-2">
                  <span className="text-xl">üìÅ</span>
                  <span className="font-medium text-gray-700">
                    {post.category.name}
                  </span>
                </div>

                {/* View Count */}
                <div className="flex items-center gap-2">
                  <span className="text-xl">üëÅÔ∏è</span>
                  <span>{post.views.toLocaleString()} views</span>
                </div>

                {/* Read Time */}
                <div className="flex items-center gap-2">
                  <span className="text-xl">‚è±Ô∏è</span>
                  <span>{post.readTime} min read</span>
                </div>

                {/* Created Date */}
                {/* ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡¶ø: Date format ‡¶ï‡¶∞‡¶õ‡¶ø readable form ‡¶è */}
                {/* ‡¶ï‡ßá‡¶® ‡¶ï‡¶∞‡¶õ‡¶ø: User friendly date display */}
                {/* ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá: toLocaleDateString() method use ‡¶ï‡¶∞‡ßá */}
                <div className="flex items-center gap-2">
                  <span className="text-xl">üìÖ</span>
                  <span>
                    {new Date(post.createdAt).toLocaleDateString("en-US", {
                      year: "numeric",
                      month: "short",
                      day: "numeric",
                    })}
                  </span>
                </div>
              </div>
            </div>
          ))}
        </div>

        {/* Success Message - ‡¶∏‡¶¨ ‡¶†‡¶ø‡¶ï ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶è‡¶ü‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá */}
        <div className="mt-10 bg-green-50 border-2 border-green-200 rounded-xl p-8">
          <div className="flex items-center gap-3 mb-3">
            <span className="text-4xl">‚úÖ</span>
            <h3 className="text-2xl font-bold text-green-800">
              Database Connected Successfully!
            </h3>
          </div>
          <p className="text-green-700 text-lg">
            Prisma is successfully fetching data from Vercel Postgres database.
            All relationships are working correctly!
          </p>
        </div>
      </div>
    </div>
  );
}
